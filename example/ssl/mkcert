#!/bin/ksh
# Mon Jul 24 02:20:46 PDT 2023
# By vkardons

# This script is based on an example from https://github.com/mrtkmynsndev/grpc-tls-go/blob/main/cert/generator.sh

# delete pem file
rm *.pem *.srl

# Create CA private key and self-signed certificate (-nodes to not encrypt the private key)
openssl req -x509 -newkey rsa:4096 -nodes -days 365 -keyout ca-key.pem -out ca-cert.pem -subj "/C=US/ST=MYSTATE/L=MYCITY/O=MYORG/OU=MYCA/CN=*.myorgname.com"

echo "CA's self-signed certificate"
openssl x509 -in ca-cert.pem -noout -text 

# Create Web Server private key and CSR (-nodes to not encrypt the private key)
openssl req -newkey rsa:4096 -nodes -keyout server-key.pem -out server-req.pem -subj "/C=US/ST=MYSTATE/L=MYCITY/O=MYORG/OU=MYUNIT/CN=*.myorgname.com"

# Sign the Server Certificate Request (CSR)
openssl x509 -req -in server-req.pem -CA ca-cert.pem -CAkey ca-key.pem -CAcreateserial -out server-cert.pem -extfile mkcert-server.conf

echo "Server's signed certificate"
openssl x509 -in server-cert.pem -noout -text

# Verify certificate
echo "Verifying certificate"
openssl verify -CAfile ca-cert.pem server-cert.pem

# Generate client's private key and certificate signing request (CSR) (-nodes to not encrypt the private key)
openssl req -newkey rsa:4096 -nodes -keyout client-key.pem -out client-req.pem -subj "/C=US/ST=MYSTATE/L=MYCITY/O=MYORG/OU=MYUNIT/CN=*.myorgname.com"

# Sign the Client Certificate Request (CSR)
openssl x509 -req -in client-req.pem -days 60 -CA ca-cert.pem -CAkey ca-key.pem -CAcreateserial -out client-cert.pem -extfile mkcert-client.conf

echo "Client's signed certificate"
openssl x509 -in client-cert.pem -noout -text

# Clean up: remove client and server Certificate Requests (no longer need them)
rm server-req.pem
rm client-req.pem
rm ca-cert.srl

